version: "3.9"

services:
  db1:
    image: postgres:15.3-alpine
    volumes:
      - binda_db1_data:/var/lib/postgresql/data
    command: -c ssl=off
    restart: unless-stopped
    container_name: binda_db_kc
    env_file:
      - ./keycloak/postgres-keycloak.env
    networks:
      - binda_network

  db2:
    image: postgres:15.3-alpine
    volumes:
      - binda_db2_data:/var/lib/postgresql/data
    command: -c ssl=off
    restart: unless-stopped
    container_name: binda_db_api
    env_file:
      - ./keycloak/postgres-api.env
    ports:
      - "5431:5432"
    networks:
      - binda_network

  kc:
    restart: unless-stopped
    env_file:
      - ./keycloak/postgres-keycloak.env
    depends_on:
      - db1
    image: quay.io/keycloak/keycloak:21.1
    container_name: binda_kc
    volumes:
    # You can import keycloak themes
    #  - "./keycloak/themes/my-incredible-theme/:/opt/keycloak/themes/my-incredible-theme/"

    # You can import keycloak plugins like mappers, authenticators and other custom SPI addons
    #   - "./keycloak/plugins/my-authenticator-0.1.jar:/opt/keycloak/providers/my-authenticator-0.1.jar"

    # You can import a stored keycloak configuration and users on startup
    # to do so uncomment the following two lines and the import parameter in entrypoint:
       - ./keycloak/data/export:/opt/keycloak/data/import

    #   ## You can also import a single file, e.g. a testrealm
    #   ## attention! A realm will only be imported if it doesn't already exist in your local keycloak (stored in postgres db)
    #   # - ./testdata/testrealm-realm.json:/opt/keycloak/data/import/testrealm-realm.json
    #   # - ./keycloak_data/keycloak.local+1.pem:/opt/keycloak/conf/server.crt.pem
    #   # - ./keycloak_data/keycloak.local+1-key.pem:/opt/keycloak/conf/server.key.pem
    environment:
      KC_FEATURES:
        authorization
        token-exchange
        docker
        impersonation
        scripts
        upload-scripts
        web-authn
        client-policies
        dynamic-scopes
    entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev",
    #  You can import a stored keycloak configuration and users on startup
    # to do so uncomment the following line and add config files to the volumes:
                 "--import-realm",
                 "--health-enabled=true"
    ]
    ports:
      - "8282:8080"
    extra_hosts:
    # it enables the container connect to the localhost:8181 of the machine
    # this solution maybe not the best way
      - "localhost:host-gateway"
    networks:
      - binda_network
    healthcheck:
      test: curl --fail localhost:8282/health/ready || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  api:
    build: ./cyber4dev-binda-api
    image:  binda_api:latest
    container_name: binda_api
    depends_on:
      - kc
    restart: unless-stopped
    env_file:
      - ./keycloak/postgres-api.env
    ports:
      - "8000:8000"
    networks:
      - binda_network

networks:
  binda_network:

volumes:
  binda_db1_data:
    driver: local
  binda_db2_data:
    driver: local
